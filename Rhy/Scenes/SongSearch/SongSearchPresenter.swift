//
//  SongSearchPresenter.swift
//  Rhy
//
//  Created by Roman Abuzyarov on 08.03.2018.
//  Copyright (c) 2018 Roman Abuzyarov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SongSearchPresentationLogic
{
    func presentSearchResults(response: SongSearch.Search.Response)
    func presentRecent(response: SongSearch.Recent.Response)
}

class SongSearchPresenter: SongSearchPresentationLogic
{
    weak var viewController: SongSearchDisplayLogic?
    
    // MARK: Do something
    
    func presentSearchResults(response: SongSearch.Search.Response)
    {
        let viewModel = SongSearch.Search.ViewModel(items:
            response.items.map {
                SongSearch.SongItem(
                    artistName: $0.artistName,
                    name: $0.name,
                    id: $0.identifier,
                    url: $0.artwork.imageURL(
                        size: CGSize(
                            width: $0.artwork.width,
                            height: $0.artwork.height)))
        })
        DispatchQueue.main.async {
            self.viewController?.displaySearchResults(viewModel: viewModel)
        }
    }
    
    func presentRecent(response: SongSearch.Recent.Response)
    {
        let viewModel = SongSearch.Recent.ViewModel(items:
            response.items.map {
                SongSearch.SongItem(
                    artistName: $0.artistName,
                    name: $0.name,
                    id: $0.identifier,
                    url: $0.artwork.imageURL(
                        size: CGSize(
                            width: $0.artwork.width,
                            height: $0.artwork.height)))
        })
        DispatchQueue.main.async {
            self.viewController?.displayRecent(viewModel: viewModel)
        }
    }
}
